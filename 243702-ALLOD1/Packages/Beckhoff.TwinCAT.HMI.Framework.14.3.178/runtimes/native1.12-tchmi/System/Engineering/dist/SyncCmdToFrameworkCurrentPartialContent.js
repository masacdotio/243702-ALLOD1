import{SyncCmdToFramework,registerCommand}from"./SyncCmdToFramework.js";import{designerModeManager}from"./DesignerModeManager.js";import{partialContentManager}from"./DesignerModePartialContentManager.js";let highlightManager;TCHMI_ENGINEERING||TcHmi.Log.errorEx(`Internal error: The file "${import.meta.url}" is restricted to use within the designer or live view.`),TCHMI_DESIGNER&&import("./DesignerModeMasterControlHighlightMngr.js").then((module=>{highlightManager=module.highlightManager})).catch((ex=>{TcHmi.Log.error("Failed to load highlightManager in Framework SyncCmdToFrameworkCurrentPartialContent: "+ex)}));export class SyncCmdToFrameworkCurrentPartialContent extends SyncCmdToFramework{constructor(cmd){super(cmd)}run(){if(!this.__cmd.targetPartial)return TcHmi.Log.error("[Source=Framework, Module=TcHmi.System.Engineering.SyncCmdToFrameworkCurrentPartialContent] Failed to synchronize partial. Missing command property targetPartial."),void(this.__result=TcHmi.Errors.E_PARAMETER_INVALID);let targetPartial=tchmi_path(this.__cmd.targetPartial);const piggyBackObj=TcHmi.ValueConverter.toObject(this.__cmd.piggyBack);if(null==piggyBackObj||void 0===piggyBackObj.requestId||null===piggyBackObj.requestId){if(!this.__cmd.content)return TcHmi.Log.error("[Source=Framework, Module=TcHmi.System.Engineering.SyncCmdToFrameworkCurrentPartialContent] Failed to synchronize partial="+targetPartial+". Command property content="+this.__cmd.content+"."),void(this.__result=TcHmi.Errors.E_PARAMETER_INVALID);const res=updatePartial(targetPartial,this.__cmd.content);return res&&(this.__result=res),void(TCHMI_DESIGNER&&highlightManager?.processDomVisibility())}{if(piggyBackObj.requestInstance!==TCHMI_DYNAMIC_INSTANCE_ID)return;let request=partialContentManager.getRequestSingle(piggyBackObj.requestId);request&&request.resolve({path:this.__cmd.targetPartial,content:this.__cmd.content})}}}export function updatePartial(targetPartial,content){let tempDiv=document.createElement("div");tempDiv.innerHTML=content;let rawPartialContent=tempDiv.firstElementChild;if(!rawPartialContent||void 0===rawPartialContent.id)return TcHmi.Log.error("[Source=Framework, Module=TcHmi.System.Engineering.SyncCmdToFrameworkCurrentPartialContent] Failed to synchronize partial="+targetPartial+". Failed to read attribute=id."),TcHmi.Errors.E_PARAMETER_INVALID;rawPartialContent.remove();const currentControl=TcHmi.Controls.get(rawPartialContent.id);if(currentControl&&"TcHmi.Controls.System.TcHmiUserControlHost"!==currentControl.getType())try{designerModeManager.syncControl(targetPartial,rawPartialContent.id,rawPartialContent.outerHTML)}catch(e){return TcHmi.Log.errorEx("[Source=Framework, Module=TcHmi.System.Engineering.SyncCmdToFrameworkCurrentPartialContent] Failed to synchronize partial="+targetPartial+". An uncaught exception occurred:\n",e),TcHmi.Errors.E_PARAMETER_INVALID}let type=TcHmi.PartialType.Invalid,partials=[];targetPartial.endsWith(".view")?(partials=TcHmi.System.config.views,type=TcHmi.PartialType.View):targetPartial.endsWith(".content")?(partials=TcHmi.System.config.content,type=TcHmi.PartialType.Content):targetPartial.endsWith(".usercontrol")&&(partials=TcHmi.System.config.userControls,type=TcHmi.PartialType.UserControl);for(const partial of partials)if(partial.url===targetPartial){(type===TcHmi.PartialType.UserControl||(type===TcHmi.PartialType.View||type===TcHmi.PartialType.Content)&&partial.preload)&&TcHmi.System.Data.Caches.partialMarkupCache.set(targetPartial,{markup:content,partialId:rawPartialContent.id});break}switch(type){case TcHmi.PartialType.View:TcHmi.EventProvider.raise("System.onViewChanged",{url:targetPartial,content});break;case TcHmi.PartialType.Content:TcHmi.EventProvider.raise("System.onContentChanged",{url:targetPartial,content});break;case TcHmi.PartialType.UserControl:TcHmi.EventProvider.raise("System.onUserControlChanged",{url:targetPartial,content});case TcHmi.PartialType.Invalid:}return TcHmi.Errors.NONE}SyncCmdToFrameworkCurrentPartialContent.supportedCommand="CurrentPartialContent",registerCommand(SyncCmdToFrameworkCurrentPartialContent);