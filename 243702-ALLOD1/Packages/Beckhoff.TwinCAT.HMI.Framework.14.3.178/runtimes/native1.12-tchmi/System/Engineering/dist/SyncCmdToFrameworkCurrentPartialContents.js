import{SyncCmdToFramework,registerCommand}from"./SyncCmdToFramework.js";import{partialContentManager}from"./DesignerModePartialContentManager.js";import{updatePartial}from"./SyncCmdToFrameworkCurrentPartialContent.js";let highlightManager;TCHMI_ENGINEERING||TcHmi.Log.errorEx(`Internal error: The file "${import.meta.url}" is restricted to use within the designer or live view.`),TCHMI_DESIGNER&&import("./DesignerModeMasterControlHighlightMngr.js").then((module=>{highlightManager=module.highlightManager})).catch((ex=>{TcHmi.Log.error("Failed to load highlightManager in Framework SyncCmdToFrameworkCurrentPartialContent: "+ex)}));export class SyncCmdToFrameworkCurrentPartialContents extends SyncCmdToFramework{constructor(cmd){super(cmd)}run(){if(!this.__cmd.targetPartials)return TcHmi.Log.error("[Source=Framework, Module=TcHmi.System.Engineering.SyncCmdToFrameworkCurrentPartialContent] Failed to synchronize partial. Missing command property targetPartials."),void(this.__result=TcHmi.Errors.E_PARAMETER_INVALID);const piggyBackObj=TcHmi.ValueConverter.toObject(this.__cmd.piggyBack);if(null==piggyBackObj||void 0===piggyBackObj.requestId||null===piggyBackObj.requestId){for(const targetPartial of this.__cmd.targetPartials){if(!targetPartial.content)continue;const res=updatePartial(targetPartial.path,targetPartial.content);res&&(this.__result=res)}TCHMI_DESIGNER&&highlightManager?.processDomVisibility()}else{if(piggyBackObj.requestInstance!==TCHMI_DYNAMIC_INSTANCE_ID)return;let request=partialContentManager.getRequestMulti(piggyBackObj.requestId);request&&request.resolve(this.__cmd.targetPartials)}}}SyncCmdToFrameworkCurrentPartialContents.supportedCommand="CurrentPartialContents",registerCommand(SyncCmdToFrameworkCurrentPartialContents);