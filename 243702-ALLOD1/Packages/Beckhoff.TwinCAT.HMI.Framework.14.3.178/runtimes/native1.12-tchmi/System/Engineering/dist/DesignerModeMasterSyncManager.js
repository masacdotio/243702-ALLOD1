import{metaDataManager}from"./DesignerModeControlMetaDataMngr.js";import{designerModeManager}from"./DesignerModeManager.js";import{highlightManager}from"./DesignerModeMasterControlHighlightMngr.js";TCHMI_DESIGNER||TcHmi.Log.errorEx(`Internal error: The file "${import.meta.url}" is restricted to use within the designer.`);export class DesignerModeMasterSyncManager{constructor(){}updatePcElementAndSync(eventName){const tcoList=[],stylenames=["top","left","width","right","height","bottom"],selectedControlsMeta=metaDataManager.getSelectedControlsMetaData();for(let id in selectedControlsMeta){const ctrlMeta=selectedControlsMeta[id];if(null==ctrlMeta)continue;const tco=TcHmi.Controls.get(ctrlMeta.id);if(!tco)continue;tcoList.push(tco);let horizontalCount=0,verticalCount=0;const pcElementClone=tco.getPcElement()[0].cloneNode(!0),tValue=TcHmi.StyleProvider.getSimpleElementStyle(tco.getElement(),stylenames);for(let stylename of stylenames)if(void 0!==tValue[stylename]){const styleHtmlName="data-tchmi-"+stylename;let oldValue=pcElementClone.getAttribute(styleHtmlName);if(oldValue){["top","height","bottom"].includes(stylename)?verticalCount++:["right","width","left"].includes(stylename)&&horizontalCount++;let isSymbolExpression=TcHmi.Symbol.isSymbolExpression(oldValue),isSymbolExpressionEscaped=TcHmi.Symbol.isSymbolExpressionEscaped(oldValue);if(isSymbolExpression&&!isSymbolExpressionEscaped){let sym=new TcHmi.System.Symbol(oldValue);if(sym){if(sym.getExpression().getType()===TcHmi.SymbolType.Server){sym.destroy();continue}sym.read((function(data){data.error===TcHmi.Errors.NONE&&(oldValue=data.value),sym.destroy()}))}}}"string"==typeof oldValue&&(oldValue=parseFloat(oldValue));const styleUnitHtmlName="data-tchmi-"+stylename+"-unit",oldUnit=pcElementClone.getAttribute(styleUnitHtmlName);let tUnitValue=tValue[stylename].replace(/[-.0-9]/g,"");"px"!==tUnitValue&&"%"!==tUnitValue&&(tUnitValue="px"),oldUnit?oldUnit!==tUnitValue&&pcElementClone.setAttribute(styleUnitHtmlName,tUnitValue):"px"!==tUnitValue&&pcElementClone.setAttribute(styleUnitHtmlName,tUnitValue);let newValue=parseFloat(tValue[stylename]);void 0===oldValue||"number"!=typeof oldValue||Math.round(oldValue)===Math.round(newValue)||["height","width"].includes(stylename)&&["Content","Parent"].includes(pcElementClone.getAttribute("data-tchmi-"+stylename+"-mode")??"")||("px"===tUnitValue?pcElementClone.setAttribute(styleHtmlName,newValue.toFixed(0)):"%"===tUnitValue&&pcElementClone.setAttribute(styleHtmlName,newValue.toFixed(1)))}horizontalCount<2&&tValue.left&&"0px"!==tValue.left&&!pcElementClone.hasAttribute("data-tchmi-left")&&pcElementClone.setAttribute("data-tchmi-left",tValue.left.replace("px","")),verticalCount<2&&tValue.top&&"0px"!==tValue.top&&!pcElementClone.hasAttribute("data-tchmi-top")&&pcElementClone.setAttribute("data-tchmi-top",tValue.top.replace("px","")),ctrlMeta.domVisibility?pcElementClone.removeAttribute("data-tchmi-creator-visibility"):pcElementClone.setAttribute("data-tchmi-creator-visibility","False"),ctrlMeta.locked?pcElementClone.setAttribute("data-tchmi-creator-locked","True"):pcElementClone.removeAttribute("data-tchmi-creator-locked"),designerModeManager.syncControl(TCHMI_TARGET_PARTIAL,ctrlMeta.id,pcElementClone.outerHTML)}TcHmi.EventProvider.raise(eventName,tcoList),highlightManager?.requestAsyncHighlighterUpdate()}}export const syncManager=new DesignerModeMasterSyncManager;